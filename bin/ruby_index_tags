#!/usr/bin/env bash
set -e

project_dir=${1:-.}
gemfile="${project_dir}/Gemfile"
temp_tags_file="${project_dir}/TAGS.$$" # Suffix with PID to make it unique
final_tags_file="${project_dir}/TAGS"

trap '/bin/rm -f $temp_tags_file' EXIT

function abort {
    local message=$1

    echo "$message" > /dev/stderr
    exit 1
}

function index_main_project {
    local temp_tags_file=$1

    index_dir --tag-file "$temp_tags_file" "$project_dir"
}

function index_dir {
    if ! ripper-tags --extra=q --recursive --emacs \
         --exclude=.git "$@" > /dev/null; then
        abort "Ripper tags failed! Is it really installed? Is the shim a valid reference to the ripper-tags script?"
    fi
}

function index_project_gems {
    local temp_tags_file=$1
    local gem_list

    cd "$project_dir"

    if ! gem_list=$(bundle list --paths); then
        abort "Command to list gems failed. Bundler returned an error."
    fi

    for gem_dir in $gem_list; do
        index_gem "$gem_dir" "$temp_tags_file"
    done
}

function index_gem {
    local gem_dir=$1
    local temp_tags_file=$2
    local gem_name

    if is_git_dir "$gem_dir"; then
      local gem_tags_file="${gem_dir}/.TAGS"
    else
      local gem_tags_file="${gem_dir}/TAGS"
    fi

    gem_name="$(basename "$gem_dir")"

    if [[ ! -f $gem_tags_file ]] || should_index_git_dir "$gem_dir"; then
        echo "Indexing ${gem_name}..."
        index_dir --tag-file "$gem_tags_file" "$gem_dir"
    else
        echo "${gem_name} already indexed"
    fi

    cat "$gem_tags_file" >> "$temp_tags_file"
}

function is_git_dir {
    local gem_dir=$1
    local git_dir="${gem_dir}/.git"

    if [[ ! -f $git_dir ]] && [[ ! -d $git_dir ]]; then
        return 1
    fi
}

function should_index_git_dir {
    local gem_dir=$1

    if ! is_git_dir "$gem_dir"; then
      return 1
    fi

    local commit_hash_file="${gem_dir}/.ruby_tags_commit_hash"
    local current_commit_hash

    current_commit_hash=$(git -C "$gem_dir" rev-parse HEAD)

    if [[ -f $commit_hash_file ]]; then
        last_commit_hash="$(cat "$commit_hash_file")"
    fi

    if [[ $last_commit_hash != "$current_commit_hash" ]]; then
        echo "$current_commit_hash" > "$commit_hash_file"
        return 0
    else
        return 1
    fi
}

if ! command -v gem > /dev/null; then
    abort "Can't find gem command. Ruby doesn't seem to be installed."
fi

if ! command -v ripper-tags > /dev/null; then
    echo "Installing ripper-tags gem..."
    gem install ripper-tags
fi

if ! command -v bundler > /dev/null; then
    # We don't automatically install bundler because the user might
    # prefer a specific version.
    abort "Can't find bundler. Make sure to gem install bundler."
fi

if [[ ! -f $gemfile ]]; then
    abort "Could not generate tags. Are you in a Ruby project directory?"
fi

echo "Indexing main project..."

index_main_project "$temp_tags_file"
index_project_gems "$temp_tags_file"

mv "$temp_tags_file" "$final_tags_file"

echo
echo "Tags generation complete! File: ${final_tags_file}"
